# include <iostream>
# include <vector>
# include <string>
# include <iomanip>
#include <algorithm>
using namespace std;
class Solution {
public:
    vector<bool> friendRequests(int n, vector<vector<int>>& restrictions, vector<vector<int>>& requests) {
        vector<vector<int>> graph(n,vector<int>(n,0));
        for (auto& it:restrictions)
        {
            graph[it[0]][it[1]] = -1;
            graph[it[1]][it[0]] = -1;
        }
        for (int i=0;i<n;i++)
        {
            graph[i][i] = 1;
        }
        print(graph);
        vector<bool> ans;
        for (auto& it:requests)
        {
            ans.push_back(requ(graph,it));
            print(graph);
        }
        return ans;
    }
private:
    void print(vector<vector<int>>& graph)
    {
        // for (int i=0;i<graph.size();i++)
        // {
        //     for (int j=0;j<graph.size();j++){
        //         cout <<setw(2) << graph[i][j];
        //     }
        //     cout <<endl;
        // }
    }
    bool requ(vector<vector<int>>& graph,vector<int> re)
    {
        int x=re[0];
        int y = re[1];
        
        if(graph[x][y] == -1)
        {
            return false;
        }
        for (int i=0;i<graph.size();i++)
        {
            if(graph[x][i] == 1 && graph[y][i] == -1)
            {
                graph[x][y] = -1;
                graph[y][x] = -1;
                return false;
            }
            else if(graph[y][i] == 1 && graph[x][i] == -1)
            {
                graph[x][y] = -1;
                graph[y][x] = -1;
                return false;
            }
        }

        graph[x][y] = 1;
        graph[y][x] = 1;
        // 同步x，y的朋友和敌人
        for (int i=0;i<graph.size();i++)
        {
            if(graph[x][i] == -1 || graph[y][i] == -1)
            {
                graph[y][i] = -1;
                graph[i][y] = -1;
                graph[x][i] = -1;
                graph[i][x] = -1;
            }
            if(graph[x][i] == 1 || graph[y][i] == 1)
            {
                graph[y][i] = 1;
                graph[i][y] = 1;
                graph[x][i] = 1;
                graph[i][x] = 1;
            }
        }
        // 同步x，y所有的朋友的朋友和敌人
        for (int i=0;i<graph.size();i++)
        {
            if(graph[x][i] == 1)
            {
                graph[i] = graph[x];
            }
        }
        return true;
    }
    
};
int main()
{
    int n=65;
    vector<vector<int>> rres = {{40,36},{43,60},{41,55},{61,50},{28,57},{24,57},{17,38},{55,8},{29,43},{14,1},{28,5},{62,63},{40,26},{4,24},{4,14},{1,23},{21,41},{1,56},{27,16},{60,27},{6,29},{57,55},{45,24},{48,28},{39,40},{38,51},{40,43},{46,25},{38,45},{45,13},{57,63},{19,11},{4,7},{54,44},{22,40},{18,62},{57,26},{6,15},{32,26},{30,48},{8,63},{42,61},{13,48},{15,22},{54,33},{33,49},{41,38},{12,52},{58,37},{13,40},{32,47},{58,54},{36,2},{53,25},{38,62},{46,49},{45,12},{8,0},{64,45},{64,30},{44,8},{13,28},{11,51},{57,43},{4,3},{16,46},{59,60},{32,53},{30,22},{1,17},{41,49},{48,21},{32,0},{50,22},{32,42},{24,40},{50,36},{3,13},{1,48},{40,32},{24,49},{34,12},{43,41},{63,3},{59,12},{46,0},{42,60},{13,30},{3,25},{35,43},{63,17},{59,5},{16,61},{2,23},{39,7},{5,13},{4,59},{64,2},{50,53},{44,38},{4,34},{33,32},{0,43},{50,55},{15,28},{63,1},{39,35},{9,22},{1,33},{28,19},{49,43},{12,10},{53,9},{21,15},{59,13},{38,7},{23,3},{14,41},{37,12},{53,60},{20,64},{20,42},{2,12},{11,12},{58,46},{29,20},{26,48},{38,34},{30,51},{56,42},{10,34},{27,31},{25,51},{52,6},{50,43},{39,6},{51,17},{57,59},{50,30},{0,14},{3,31},{50,33},{6,23},{61,62},{2,44},{62,60},{23,44},{53,43},{45,7},{14,55},{20,56},{63,47},{54,1},{17,23},{25,22},{43,56},{63,18},{46,6},{29,13},{44,55},{51,63},{36,28},{53,35},{55,2},{59,30},{36,15},{42,57},{33,11},{63,30},{46,57},{58,57},{64,18},{1,13},{18,46},{26,64},{13,8},{26,33},{21,61},{9,59},{27,0},{26,59},{41,15},{44,18},{17,49},{58,30},{24,31},{55,64},{39,38},{41,45},{62,37},{51,37},{33,7},{61,52},{11,13},{57,35},{36,55},{5,2},{23,25},{61,56},{1,49},{47,41},{51,16},{17,4},{29,53},{58,5},{55,63},{59,45},{20,39},{37,14},{30,39},{18,55},{41,27},{45,14},{56,49},{33,60},{34,16},{22,64},{10,40},{8,53},{4,54},{52,57},{46,39},{6,13},{41,29},{48,62},{32,8},{50,1},{45,46},{21,19},{36,37},{0,40},{28,14},{44,52},{43,20},{4,50},{17,2},{18,12},{59,62},{48,22},{8,56},{28,50},{32,58},{57,47},{7,2},{29,0},{37,4},{19,60},{2,38},{4,60},{54,53},{55,26},{27,39},{41,1},{7,31},{22,29},{40,29},{51,35},{31,59},{2,56},{11,59},{9,17},{60,5},{0,18},{55,58},{11,52},{0,42},{26,17},{0,45},{29,49},{31,43},{44,64},{18,45},{22,24},{31,25},{55,43},{25,47},{10,24},{0,6},{8,35},{23,55},{41,28},{9,44},{38,28},{2,8},{20,31},{2,57},{50,54},{0,16},{17,31},{39,62},{7,61},{25,55},{53,56},{6,49},{35,0},{24,12},{41,57},{39,4},{63,38},{37,64},{17,64},{44,56},{10,6},{25,2},{62,10},{11,45},{6,8},{63,49},{61,8},{9,45},{59,47},{2,0},{22,28},{15,37},{64,29},{25,35},{34,59},{26,6},{25,12},{15,38},{64,60},{32,2},{28,49},{42,45},{22,16},{49,14},{58,64},{20,45},{23,54},{43,25},{10,42},{3,8},{35,52},{25,1}};
    vector<vector<int>> req = {{23,8},{19,53},{36,45},{3,11},{15,38},{18,16},{15,8},{22,39},{16,57},{28,9},{58,14},{46,25},{60,5},{38,60},{29,18},{54,27},{38,27},{7,6},{53,21},{34,32},{62,41},{35,44},{33,21},{27,39},{57,37},{23,58},{3,16},{12,56},{63,26},{50,37},{29,44},{1,42},{7,3},{46,14},{44,22},{32,14},{32,19},{24,6},{4,30},{60,40},{48,32},{50,22},{26,54},{14,61},{62,32},{18,13},{56,29},{0,57},{17,22},{57,54},{29,61},{31,15},{7,16},{4,13},{12,52},{21,9},{15,62},{15,25},{41,49},{38,58},{58,37},{47,56},{46,3},{42,27},{53,14},{17,20},{13,63},{26,56},{24,12},{40,35},{38,4},{1,55},{20,37},{13,39},{63,54},{30,5},{23,15},{64,4},{37,5},{56,36},{10,1},{3,16},{16,61},{28,17},{0,33},{46,5},{45,29},{14,6},{44,61},{25,2},{11,17},{30,60},{18,32},{8,36},{36,23},{27,1},{56,15},{6,13},{26,1},{53,34},{3,41},{12,60},{27,36},{3,37},{13,0},{2,44},{2,30},{61,35},{36,58},{4,36},{12,22},{0,16},{3,38},{4,14},{47,50},{60,46},{29,8},{27,7},{55,54},{33,56},{22,28},{32,28},{54,1},{40,2},{21,2},{52,43},{1,8},{43,62},{40,42},{6,1},{47,6},{53,61},{59,47},{9,16},{59,3},{34,11},{57,19},{59,2},{8,7},{53,43},{28,26},{44,10},{11,0},{28,23},{7,13},{24,41},{64,49},{61,19},{27,33},{1,4},{25,21},{4,55},{22,61},{34,31},{18,16},{53,52},{45,16},{39,43},{36,45},{16,12},{52,0},{63,33},{40,25},{39,32},{31,32},{8,12},{1,61},{20,62},{5,8},{0,57},{40,41},{63,38},{6,1},{63,41},{12,44},{23,58},{19,58},{3,26},{30,37},{17,16},{29,60},{57,26},{47,21},{8,51},{11,24},{5,25},{0,45},{41,39},{1,43},{41,19},{57,63},{0,16},{58,16},{14,13},{36,12},{27,31},{39,53},{49,32},{46,32},{54,5},{47,9},{15,24},{51,37},{46,34},{34,62},{53,57},{19,60},{19,16},{30,43},{14,6},{3,24},{34,56},{29,20},{21,0},{11,23},{64,0},{29,55},{1,37},{12,28},{64,48},{22,38},{25,30},{58,14},{51,37},{57,33},{13,52},{16,55},{18,55},{8,35},{10,32},{5,10},{52,25},{60,0},{62,44},{36,0},{13,30},{14,61},{30,62},{23,24},{8,49},{28,50},{11,52},{17,19},{57,18},{24,16},{26,25},{50,3},{27,35},{20,54},{29,21},{62,2},{4,40},{39,56},{55,42},{12,47},{62,4},{62,0},{41,30},{49,32},{37,12},{6,15},{16,49},{23,63},{19,30},{61,15},{57,43},{9,55},{27,43},{60,39},{36,52},{24,57},{46,49},{20,11},{49,0},{50,33},{8,12},{21,51},{47,8},{29,52},{11,56},{14,7},{3,36},{50,27},{23,13},{23,13},{61,13},{52,25},{34,60},{28,43},{36,58},{31,63},{34,32},{41,30},{18,49}};
    Solution s;
    s.friendRequests(n,rres,req);
    cout <<"done";
    return 0;
}